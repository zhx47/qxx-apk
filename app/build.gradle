plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/keystore.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

android {
    //noinspection GradleDependency
    buildToolsVersion build_versions.build_tools
    compileSdkVersion build_versions.target_sdk

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.example.qde"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'x86', 'x86_64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : keyProps['JPUSH_APPKEY'], //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    signingConfigs {
        release {
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
        }
        debug {
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
        }
    }

    buildTypes {
        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
        }
    }

    lint {
        abortOnError false
    }
    namespace 'com.example.qde'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation deps.junit
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    def work_version = '2.8.0'
    api("androidx.work:work-multiprocess:$work_version")
    api("androidx.work:work-runtime-ktx:$work_version")

    //Android Room
    def room_version = '2.5.0'
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    def retrofit2_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"

    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    //权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.github.getActivity:XXPermissions:16.8'

    //Android Keep Alive(安卓保活)，Cactus 集成双进程前台服务，JobScheduler，onePix(一像素)，WorkManager，无声音乐
    //https://github.com/gyf-dev/Cactus
    implementation 'com.gyf.cactus:cactus:1.1.3-beta13'

    api 'com.tencent.tbs:tbssdk:44286'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.83'

    implementation 'cn.jiguang.sdk:jcore:4.1.0'
    implementation 'cn.jiguang.sdk:jpush:4.7.2'
}
//自动添加X-Library依赖
apply from: 'x-library.gradle'